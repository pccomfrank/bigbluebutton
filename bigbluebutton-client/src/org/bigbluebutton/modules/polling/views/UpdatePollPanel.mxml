<?xml version="1.0" encoding="utf-8"?>
<mx:Panel xmlns:mx="http://www.adobe.com/2006/mxml" 
          borderStyle="none" horizontalAlign="center" creationComplete="preInit()"
          headerHeight="0" borderThicknessBottom="0" borderThicknessLeft="0"
          borderThicknessRight="0" borderThicknessTop="0">
  <mx:Script>
      <![CDATA[
        import com.adobe.utils.StringUtil;
        
        import org.bigbluebutton.modules.polling.events.CreatePollEvent;
        import org.bigbluebutton.modules.polling.events.PollUpdateWindowEvent;
        import org.bigbluebutton.modules.polling.events.UpdatePollEvent;
        import org.bigbluebutton.modules.polling.model.PollVO;
        import org.bigbluebutton.modules.polling.model.PollingViewModel;
        import org.bigbluebutton.modules.polling.model.QuestionVO;
        import org.bigbluebutton.modules.polling.model.Response;
        import org.bigbluebutton.modules.polling.vo.CreatePollVO;
        import org.bigbluebutton.modules.polling.vo.CreateQuestionVO;
        import org.bigbluebutton.modules.polling.vo.UpdatePollVO;
        import org.bigbluebutton.modules.polling.vo.UpdateQuestionVO;
        import org.bigbluebutton.modules.polling.vo.UpdateResponseVO;
        import org.bigbluebutton.util.i18n.ResourceUtil;
        
        [Bindable] private var baseIndex:int;

        public var viewModel:PollingViewModel;
        public var pollID:String;
        
        private var poll:PollVO;
        
        [Bindable] private var _answersText:String = "";
        
        [Bindable] private var _title:String;
        [Bindable] private var qvo:QuestionVO;
        private var  responses:Array;
        
        private var _pollID:String;
               
        private function preInit():void {
          poll = viewModel.getPoll(pollID);
          _title = poll.title;
          _pollID = poll.id;
          qvo = poll.questions[0] as QuestionVO;
          
          responses = qvo.answers;
          for (var i:int = 0; i < responses.length; i++) {
            var r:Response = responses[i] as Response;
            _answersText += r.response + "\n";
          }
          
          StringUtil.trim(_answersText)
        }
        
        public function updatePoll():void {
          StringUtil.trim(_answersText);
            
          var answersArray:Array;
          var valid:Boolean = true;
          answersArray = pollAnswers.text.split("\r"); 
          // splitting by '*' and new line, thus user can type '*' anywhere except the newline
          //answersArray[0] = answersArray[0].split('*').join(''); 
          // As after split '*' is not displayed we need to take off from first element which is not splitted
          answersArray = makeAnswersPretty(answersArray);
          answersArray = sanitize(answersArray);
          
          var updatePollVO:UpdatePollVO = new UpdatePollVO(pollID, pollTitle.text);
          var questionType:String = "MULTI_CHOICE";
          if ( multiple_response.selected) {
            questionType = "MULTI_RESPONSE";
          }
          var question:UpdateQuestionVO = new UpdateQuestionVO(qvo.id, questionType, pollQuestion.text);
          
          for (var i:int = 0; i < answersArray.length; i++) {
            var respID:String = "";
            if (i < responses.length) {
              var r:Response = responses[i] as Response;
              respID = r.id;
            }
            
            question.addResponse(new UpdateResponseVO(respID, answersArray[i] as String));
          }
          
          updatePollVO.addQuestion(question);
          
          dispatchEvent(new UpdatePollEvent(updatePollVO));
          
          close();
        }
        
        private function isDuplicateAnswers(arr:Array):Boolean{
          var x:uint;
          var y:uint;
          for (x = 0; x < arr.length ; x++){
            for (y = x + 1; y < arr.length; y++){
              if (arr[x] === arr[y]){
                return true;
              }
            }
          }
          return false;
        }
        
        //trimming return and whitespaces at the end of each array element
        private function makeAnswersPretty(arr:Array):Array{
          var i:uint;
          var trim:RegExp = /^\s+|\s+$/g;
          for (i = 0; i < arr.length; i++){
            arr[i] = arr[i].replace(trim, "");
            if(!arr[i]) //if user puts just return or space and return - this array elements will be deleted
              arr.splice(i,1);
          }
          return arr;
        }
        
        private function sanitize(answersArray:Array):Array {
          for (var i:int=0; i< answersArray.length; i++){
            if(i != 0 && (answersArray[i] == null || answersArray[i] == "")){
              answersArray.splice(i,1);
            }
          }
          
          return answersArray;
        }
        
        private function onUpdate():void {
          updatePoll();
        }
        
        private function close():void {
          dispatchEvent(new PollUpdateWindowEvent(PollUpdateWindowEvent.CLOSE_WINDOW));		
        }
        
      ]]>    
  </mx:Script>
  <mx:HBox width="100%" height="25" horizontalAlign="left">
    <mx:Label text="Update Poll" styleName="micSettingsWindowTitleStyle" paddingLeft="3"/>
  </mx:HBox>
  
  <mx:VBox width="90%" height="90%" horizontalAlign="center" borderStyle="solid" borderThickness="1">

    <mx:HBox width="100%" height="20" horizontalAlign="left">
      <mx:Label id="titleLabel" text="Title" styleName="presentationNamesLabelStyle" paddingLeft="3"/>
    </mx:HBox>  
    <mx:HBox width="96%" height="25" paddingTop="5">
      <mx:TextInput id="pollTitle" width="100%" text="{_title}" editable="true" maxChars="250" paddingLeft="10"/>
    </mx:HBox>
    
    <mx:HBox width="100%" height="20" horizontalAlign="left" paddingTop="3">
      <mx:Label id="questionLabel" text="Question" styleName="presentationNamesLabelStyle" paddingLeft="3"/>
    </mx:HBox>  
    <mx:HBox width="96%" height="75" paddingTop="5">
      <mx:TextArea id="pollQuestion" width="100%" height="100%" wordWrap="true" text="{qvo.question}" editable="true" maxChars="1000" paddingLeft="10"/>
    </mx:HBox>

    <mx:HBox width="100%" height="20" horizontalAlign="left" paddingLeft="3">
      <mx:Label id="answersLabel" text="Answers" styleName="presentationNamesLabelStyle" paddingLeft="3"/>
    </mx:HBox> 
    <mx:HBox width="100%" height="20" horizontalAlign="left">
      <mx:Label id="hintAnswersLabel" text="Start every answer with a new line" fontSize="12" styleName="presentationNamesLabelStyle" paddingLeft="10"/>
    </mx:HBox>
    <mx:HBox width="96%" height="150" paddingTop="5">
      <mx:TextArea id="pollAnswers" width="100%" height="100%" wordWrap="true" text="{_answersText}" maxChars="2000" paddingLeft="10"/>
    </mx:HBox>
    <mx:CheckBox id="multiple_response" selected="{qvo.multiResponse}" paddingTop="3" paddingBottom="5"
                 label="{ResourceUtil.getInstance().getString('bbb.polling.createPoll.moreThanOneResponse')}"
                 tabIndex="{baseIndex+4}"/>
 
  </mx:VBox>
  
  <mx:HBox width="100%" height="35" horizontalAlign="right" paddingBottom="5">
    <mx:Button label="Update" styleName="presentationUploadShowButtonStyle" click="onUpdate()" paddingRight="5"/>
    <mx:Button label="Cancel" styleName="presentationUploadShowButtonStyle" click="close()" paddingRight="5"/>
  </mx:HBox>  
  
</mx:Panel>
